
# To use this file::
#  conda env create -f greenhouse.yml
name: greenhouse

channels:
- conda-forge
- plotly
- jpn
- defaults

dependencies:
- python=3.7

- cython>=0.29.1
- conda-forge::openmp
- bumpversion
- clangdev # [mac]

# Security
- defaults::openssl
- defaults::certifi
- defaults::ca-certificates

# Math
- defaults::numpy>=1.16
- defaults::numpy-base
- defaults::mkl
- defaults::mkl_fft
- defaults::mkl_random
- defaults::blas
- defaults::intel-openmp
- defaults::pandas>=0.23.4
- defaults::scipy>=1.2
- defaults::scikit-learn>=0.20.1
- networkx>=2.2
- jpn::ghalton>=0.6.1

# Documentation
- sphinx>=1.8.2
- sphinxcontrib>=1.0
- pygments>=2.2.0
- docutils>=0.14
- sphinx_rtd_theme
- jpn::guzzle_sphinx_theme
- nbsphinx
- numpydoc

# YAML Processing
- jpn::yamllint>=1.11
- jpn::pathspec>=0.5.9

# Data Storage and File Management
- pytables=3.4.4
- h5py>=2.8.0
- hdf5>=1.10.2
- appdirs>=1.4.3

# Visualization
- matplotlib>=3.0.1
- seaborn>=0.9
- pydot
- graphviz>=2.38
- plotly>=3.2.1
- plotly::plotly-orca  # Plotly Static Image Export

# Mapping
- conda-forge::fiona>=1.7.11
- conda-forge::gdal>=2.2.4
- conda-forge::geopandas>=0.4
- conda-forge::krb5>=1.16
- conda-forge::shapely>=1.6.4
- conda-forge::osmnx>=0.9
- conda-forge::contextily
- conda-forge::libiconv

# User Interface
- tqdm
- ipywidgets>=7.2

# Parallel Processing
- joblib>=0.13.2
- dask>=1.0
- distributed>=1.25
- cloudpickle>=0.6.1

# MS Word Compatibility
- python-docx>=0.8.6

# MS Excel Compatibility
- openpyxl>=2.4
- xlrd
- xlsxwriter

# HTML Compatibility
- beautifulsoup4>=4.6
- jinja2>=2.9.6  # for pandas styler
# develop::xmle

# Jupyter and IPython
- ipykernel>=5.1
- nb_conda>=2.2.1
# jupyter_contrib_nbextensions>=0.4.0   # on conda-forge only
- jupyterlab>=0.35.3
- notebook>=5.7.2
- conda-forge::nodejs

# Choice Modeling
# develop::filez
- conda-forge::addict
# develop::larch>=5.1

# Testing
- pytest>=4.0.1
- nbval>=0.9.1

# Machine Learning Tools
- pip:
  - plaidml-keras
  - xgboost

### DEVELOP
#
# cd ~/Git/filez 
# python setup.py develop --no-deps
# cd ~/Git/xmle
# python setup.py develop --no-deps
# cd ~/Git/addict_yaml
# python setup.py develop --no-deps
# cd ~/Larch
# python setup.py develop --no-deps



### PlaidML
#
#   pip install -U plaidml-keras
#
# Next, setup PlaidML to use your preferred computing device:
#
#   plaidml-setup
#
# PlaidML should now be installed! You can test your installation by running MobileNet in plaidbench:
#
#   pip install plaidml-keras plaidbench
#   plaidbench keras mobilenet

### XGBoost
#
#   pip install -U xgboost
#






# After setting up and activating this environment, register with jupyter-notebook::
#   python -m ipykernel install --user --name taiga37 --display-name "Taiga 3.7"



# These may also be of interest for jupyter lab users:
#
# Avoid "JavaScript heap out of memory" errors during extension installation::
#   # (OS X/Linux)
#   export NODE_OPTIONS=--max-old-space-size=4096
#   # (Windows)
#   set NODE_OPTIONS=--max-old-space-size=4096
#
# jupyter labextension install @jupyterlab/toc --no-build
# jupyter labextension install @jupyter-widgets/jupyterlab-manager --no-build
# jupyter labextension install jupyterlab_bokeh --no-build
# jupyter labextension install @jupyterlab/plotly-extension --no-build
# jupyter labextension install @jupyterlab/geojson-extension --no-build
# jupyter labextension install @jupyterlab/mathjax3-extension --no-build
# jupyter labextension install plotlywidget@0.4.0 --no-build
# jupyter lab build
#
# Avoid "JavaScript heap out of memory" errors during extension installation::
#   # (OS X/Linux)
#   export NODE_OPTIONS=--max-old-space-size=4096
#   # (Windows)
#   set NODE_OPTIONS=--max-old-space-size=4096


# These are not yet compatible...
# jupyter labextension install jupyterlab_voyager



